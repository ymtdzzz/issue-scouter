package config

import (
	"fmt"
	"os"
	"path/filepath"
	"strings"

	"github.com/creasty/defaults"
	"gopkg.in/yaml.v3"
)

type Config struct {
	Repos       map[string][]string `yaml:"repositories"`
	Labels      []string            `yaml:"labels" default:"[\"good first issue\"]"`
	PerPage     int                 `yaml:"per_page" default:"100"`
	Destination string              `yaml:"destination" default:"."`
	Description string              `yaml:"description" default:"This file is generated by [issue-scouter](https://github.com/ymtdzzz/issue-scouter)"`
}

func (c *Config) LabelsForQuery() string {
	labels := make([]string, len(c.Labels))
	for i, label := range c.Labels {
		labels[i] = "\"" + label + "\""
	}
	return strings.Join(labels, ",")
}

func LoadConfig(filename string) (*Config, error) {
	filename = filepath.Clean(filename)
	data, err := os.ReadFile(filename)
	if err != nil {
		return nil, err
	}
	var config Config
	if err := yaml.Unmarshal(data, &config); err != nil {
		return nil, err
	}
	if err := defaults.Set(&config); err != nil {
		return nil, err
	}
	return &config, nil
}

func ParseRepoURL(url string) (owner, repo string, err error) {
	parts := strings.Split(strings.TrimPrefix(url, "https://github.com/"), "/")
	if len(parts) < 2 {
		return "", "", fmt.Errorf("invalid repository URL: %s", url)
	}
	return parts[0], parts[1], nil
}
